# ATR210
# Drew Griffith

#hint: Mean reversion strategy. LE when price closes outside of the ATR(10) * -2 and RSI2 < 5.

declare upper;

input extremities = 2.0; #percentage
input innerValue = 1.5;
input outerValue = 2.0;
input length = 10;
def price = close;
def averageType = AverageType.EXPONENTIAL;
def trueRangeAverageType = AverageType.EXPONENTIAL;

#ATR Bands
def OuterValueshift = outerValue * MovingAverage(trueRangeAverageType, TrueRange(high, close, low), length);
def InnerValueshift = innerValue * MovingAverage(trueRangeAverageType, TrueRange(high, close, low), length);

def average = MovingAverage(averageType, price, length);
plot Avg = average;
Avg.SetDefaultColor(GetColor(1));
Avg.SetLineWeight(2);

plot UpperOuterBand = average + outerValueshift;
UpperOuterBand.AssignValueColor(Color.RED);
UpperOuterBand.SetLineWeight(2);

plot UpperInnerBand = average + InnerValueshift;
UpperInnerBand.AssignValueColor(Color.RED);
UpperInnerBand.SetLineWeight(1);
UpperInnerBand.SetStyle(Curve.SHORT_DASH);

plot LowerOuterBand = average - outerValueshift;
LowerOuterBand.AssignValueColor(Color.GREEN);
LowerOuterBand.SetLineWeight(2);

plot LowerInnerBand = average - InnerValueshift;
LowerInnerBand.AssignValueColor(Color.GREEN);
LowerInnerBand.SetLineWeight(1);
LowerInnerBand.SetStyle(Curve.SHORT_DASH);

# Long entry signals (only)
def rsi = RSI(length = 2) < 5;
## high/close must be greater than n%
def ext = ((high / close - 1) * 100) >= extremities;

plot LE = price < LowerOuterBand and rsi and ext;
LE.AssignValueColor(Color.GREEN);
LE.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_UP);
LE.SetLineWeight(5);

# Turn AddClouds off by putting a #-sign at the first position of the lines
AddCloud(UpperOuterBand, UpperInnerBand, color.red);
AddCloud(LowerInnerBand, LowerOuterBand, color.green);

#Alert(LE, "ATR210", Alert.Bar, Sound.Bell);
