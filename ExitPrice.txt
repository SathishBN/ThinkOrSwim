# Exit Price
# Drew Griffith

#hint: Mean Reversion EXIT Strategy. The strategy is based on closing prices of the day of signal, so buy as close to the EOD as possible. The target is normally the high price of the day of entry. Ideal hold times are less than 5 days. If there is no reversal, the position moves to breakeven. Optimized for use on daily charts.

declare upper;

input factor = 5;
def length = 100;
input innerValue = 1.5;
input basis = {default annual};
def atrlength = 10;
def price = close;
def averageType = AverageType.EXPONENTIAL;
def trueRangeAverageType = AverageType.EXPONENTIAL;

# ATR Band Calc
def InnerValueshift = innerValue * MovingAverage(trueRangeAverageType, TrueRange(high, close, low), atrlength);
def average = MovingAverage(averageType, price, atrlength);
def LowerInnerBand = average - InnerValueshift;
def LE = price < LowerInnerBand;

def ap = GetAggregationPeriod();
Assert(ap >= AggregationPeriod.MIN, "study can only be calculated for time-aggregated charts: " + ap);
def barsperday = (RegularTradingEnd(GetYYYYMMDD()) - RegularTradingStart(GetYYYYMMDD())) / ap;
def barsperyear =
    if ap > AggregationPeriod.WEEK then 12
    else if ap == AggregationPeriod.WEEK then 52
    else if ap >= AggregationPeriod.DAY then 252 * AggregationPeriod.DAY / ap
    else 252 * barsperday;
def basiscoeff;
switch (basis) {
case annual:
    basiscoeff = 1;
}
def cllog = Log(close / close[1]);
def hv = StDev(cllog, length) * Sqrt(barsperyear / basiscoeff * length / (length - 1)) * factor;

# Target based on historical vol * factor
def pricetarget = if LE then (close * (hv / 100)) + close else Double.NaN;

def pt = if LE then pricetarget
    else if LE[1] then pricetarget[1]
    #else if LE[2] then pricetarget[2]
    else Double.NaN;

plot target = pt;

target.SetPaintingStrategy(PaintingStrategy.DASHES);
target.SetLineWeight(1);
target.AssignValueColor(Color.WHITE);
